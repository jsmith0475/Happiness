setwd("~/Dropbox (Smith Household)")
?setdir
getwd()
write_csv(happiness_train, "/Users/jerrysmith/Dropbox (Smith Household)/R Projects/Project/Happiness Index/happiness_train.csv")
library("ggplot2")
library("DALEX")
library("ranger")
library("modelStudio")
library(tidyverse)
library(tidymodels)
library(archivist)
library(stringr)
??write_csv
happiness_tr <- happiness_train
happiness_tr <-add_rownames(happiness_tr, var = "rowname")
colnames(happiness_tr)
head(happiness_tr)
happiness_te <- happiness_test
happiness_te <- add_rownames(happiness_te, var = "rowname")
happiness_te_usa <- happiness_te %>% filter(str_detect(rowname, "United States"))
ggplot(happiness_tr, aes(y=score, x=gdp_per_capita)) +
geom_point() +
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")
# fit a model
model_ranger <- ranger(score ~., data = happiness_train)
model_glm <- glm(score ~ ., data=happiness_train)
# create an explainer for the model
explainer_ranger <- DALEX::explain(model_ranger,
data = happiness_test,
y = happiness_test$score,
label = "Random Forest")
explainer_glm <- DALEX::explain(model_glm,
data = happiness_test,
y = happiness_test$score,
label = "GLM")
bd_usa <- predict_parts(explainer = explainer,
new_observation = happiness_te_usa,
type = "break_down_interactions")
bd_usa
plot(bd_usa)
# make a studio for the model
modelStudio(explainer, N=500, B=15)
vip_glm <- variable_importance(explainer = explainer_glm,
loss_function = loss_root_mean_square)
vip_ranger <- variable_importance(explainer = explainer_ranger,
loss_function = loss_root_mean_square)
plot(vip_glm, vip_ranger, max_vars = 10)
library(readr)
write_csv(happiness_train, "/Users/jerrysmith/Dropbox (Smith Household)/R Projects/Project/Happiness Index/happiness_train.csv")
write_csv(happiness_train, "/Users/jerrysmith/Dropbox (Smith Household)/R Projects/Project/Happiness Index/Project Data/happiness_train.csv")
write_csv(happiness_test, "/Users/jerrysmith/Dropbox (Smith Household)/R Projects/Project/Happiness Index/Project Data/happiness_test.csv")
write_csv(happiness_tr, "/Users/jerrysmith/Dropbox (Smith Household)/R Projects/Project/Happiness Index/Project Data/happiness_train.csv")
write_csv(happiness_te, "/Users/jerrysmith/Dropbox (Smith Household)/R Projects/Project/Happiness Index/Project Data/happiness_test.csv")
# make a studio for the model
modelStudio(explainer, N=500, B=15)
bd_usa <- predict_parts(explainer = explainer_glm,
new_observation = happiness_te_usa,
type = "break_down_interactions")
# make a studio for the model
modelStudio(explainer_glm, N=500, B=15)
# make a studio for the model
modelStudio(explainer_ranger, N=500, B=15)
library("ggplot2")
library("DALEX")
library("ranger")
library("modelStudio")
library(tidyverse)
library(tidymodels)
library(archivist)
library(stringr)
happiness_tr <- happiness_train
happiness_tr <-add_rownames(happiness_tr, var = "rowname")
colnames(happiness_tr)
head(happiness_tr)
happiness_te <- happiness_test
happiness_te <- add_rownames(happiness_te, var = "rowname")
happiness_te_usa <- happiness_te %>% filter(str_detect(rowname, "United States"))
ggplot(happiness_tr, aes(y=score, x=gdp_per_capita)) +
geom_point() +
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")
# fit a model
model_ranger <- ranger(score ~., data = happiness_train)
model_glm <- glm(score ~ ., data=happiness_train)
# create an explainer for the model
explainer_ranger <- DALEX::explain(model_ranger,
data = happiness_test,
y = happiness_test$score,
label = "Random Forest")
explainer_glm <- DALEX::explain(model_glm,
data = happiness_test,
y = happiness_test$score,
label = "GLM")
bd_usa <- predict_parts(explainer = explainer_glm,
new_observation = happiness_te_usa,
type = "break_down_interactions")
bd_usa
plot(bd_usa)
# make a studio for the model
modelStudio(explainer_ranger, N=500, B=15)
vip_glm <- variable_importance(explainer = explainer_glm,
loss_function = loss_root_mean_square)
vip_ranger <- variable_importance(explainer = explainer_ranger,
loss_function = loss_root_mean_square)
plot(vip_glm, vip_ranger, max_vars = 10)
library(readr)
# make a studio for the model
modelStudio(explainer_ranger, N=500, B=15)
bd_usa <- predict_parts(explainer = explainer_glm,
new_observation = happiness_te_usa,
type = "break_down_interactions")
bd_usa
plot(bd_usa)
vip_glm <- variable_importance(explainer = explainer_glm,
loss_function = loss_root_mean_square)
vip_ranger <- variable_importance(explainer = explainer_ranger,
loss_function = loss_root_mean_square)
plot(vip_glm, vip_ranger, max_vars = 10)
happiness_te %>% top_n(1, score)
happiness_te %>% top_n(5, score)
library("ggplot2")
library("DALEX")
library("ranger")
library("modelStudio")
library(tidyverse)
library(tidymodels)
library(archivist)
library(stringr)
happiness_tr <- happiness_train
happiness_tr <-add_rownames(happiness_tr, var = "rowname")
colnames(happiness_tr)
head(happiness_tr)
happiness_te <- happiness_test
happiness_te <- add_rownames(happiness_te, var = "rowname")
happiness_te_usa <- happiness_te %>% filter(str_detect(rowname, "United States"))
happiness_te %>% top_n(5, score)
happiness_tr %>% filter("United" %in% rowname)
happiness_tr %>% filter("United" %in% rowname)
happiness_tr %>% filter(str_detect(rowname, 'United'))
happiness_tr %>% filter(str_detect(rowname, 'United States'))
# Import Testing Data (2019)
happiness_te <- happiness_test
happiness_te <- add_rownames(happiness_te, var = "rowname")
happiness_te_usa <- happiness_te %>% filter(str_detect(rowname, "United States"))
happiness_te %>% top_n(5, score)
ggplot(happiness_tr, aes(y=score, x=gdp_per_capita)) +
geom_point() +
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")
# Fit a Random Forest modle
model_ranger <- ranger(score ~., data = happiness_tr)
?glm
# Fit a Random Forest and Generalized Linear Model
model_ranger <- ranger(score ~., data = happiness_tr)
model_glm <- glm(score ~ ., data = happiness_tr)
# Create an explainer for the models
explainer_ranger <- DALEX::explain(model_ranger,
data = happiness_test,
y = happiness_test$score,
label = "Random Forest")
explainer_glm <- DALEX::explain(model_glm,
data = happiness_test,
y = happiness_test$score,
label = "General Linear Model")
vip_glm <- variable_importance(explainer = explainer_glm,
loss_function = loss_root_mean_square)
vip_ranger <- variable_importance(explainer = explainer_ranger,
loss_function = loss_root_mean_square)
plot(vip_glm, vip_ranger, max_vars = 10)
# Make a studio for the model
modelStudio(explainer_glm, N=500, B=15)
# Fit a Random Forest and Generalized Linear Model
model_ranger <- ranger(score ~., data = happiness_tr)
model_glm <- glm(score ~ ., data = happiness_tr)
# Create an explainer for the models
explainer_ranger <- DALEX::explain(model_ranger,
data = happiness_te,
y = happiness_te$score,
label = "Random Forest")
explainer_glm <- DALEX::explain(model_glm,
data = happiness_te,
y = happiness_te$score,
label = "General Linear Model")
vip_glm <- variable_importance(explainer = explainer_glm,
loss_function = loss_root_mean_square)
vip_glm <- variable_importance(explainer = explainer_glm,
loss_function = loss_root_mean_square)
# Fit a Random Forest and Generalized Linear Model
model_ranger <- ranger(score ~., data = happiness_tr[,-"rowname"])
# Fit a Random Forest and Generalized Linear Model
model_ranger <- ranger(score ~., data = happiness_tr[,-rowname])
head(happiness_tr)
head(happiness_tr[,-rowname])
head(happiness_tr[,-1])
head(happiness_tr[,-happiness_tr$rowname])
head(happiness_tr[,!rowname])
head(happiness_tr[,names(happiness_tr) %in% "rowname"])
head(happiness_tr[,!names(happiness_tr) %in% "rowname"])
happieness_te_data <- happiness_te[,!names(happiness_te) %in% "rowname"]
happieness_tr_data <- happiness_tr[,!names(happiness_tr) %in% "rowname"]
# Plot Score vs GDP
ggplot(happieness_tr_data, aes(y=score, x=gdp_per_capita)) +
geom_point() +
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")
# Plot Score vs GDP
ggplot(happieness_tr_data, aes(y=score, x=gdp_per_capita)) +
geom_point() +
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")
# Fit a Random Forest and Generalized Linear Model
model_ranger <- ranger(score ~., data = happieness_tr_data)
model_glm <- glm(score ~ ., data = happieness_tr_data)
# Create an explainer for the models
explainer_ranger <- DALEX::explain(model_ranger,
data = happiness_te_data,
y = happiness_te_data$score,
label = "Random Forest")
happieness_te_data <- happiness_te[,!names(happiness_te) %in% "rowname"]
# Create an explainer for the models
explainer_ranger <- DALEX::explain(model_ranger,
data = happieness_te_data,
y = happieness_te_data$score,
label = "Random Forest")
explainer_glm <- DALEX::explain(model_glm,
data = happieness_te_data,
y = happieness_te_data$score,
label = "General Linear Model")
vip_glm <- variable_importance(explainer = explainer_glm,
loss_function = loss_root_mean_square)
vip_ranger <- variable_importance(explainer = explainer_ranger,
loss_function = loss_root_mean_square)
plot(vip_glm, vip_ranger, max_vars = 10)
# Make a studio for the model
modelStudio(explainer_glm, N=500, B=15)
model_svm <- svm(score ~ ., data = happieness_tr_data)
?svm
library(e1071)
model_svm <- svm(score ~ ., data = happieness_tr_data)
?svm
explainer_svm <- DALEX::explain(model_svm,
data = happieness_te_data,
y = happieness_te_data$score,
label = "Support Vector Machine")
vip_svm <- variable_importance(explainer = explainer_svm,
loss_function = loss_root_mean_square)
plot(vip_glm, vip_ranger, vip_svm, max_vars = 10)
# Make a studio for the model
modelStudio(explainer_svm, N=500, B=15)
bd_usa <- predict_parts(explainer = explainer_svm,
new_observation = happiness_te_usa,
type = "break_down_interactions")
bd_usa
plot(bd_usa)
# Plot Score vs GDP
ggplot(happieness_tr_data, aes(y=score, x=gdp_per_capita)) +
geom_point() +
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")
# Plot Score vs GDP
ggplot(happieness_tr_data, aes(y=score, x=gdp_per_capita)) +
geom_point() +
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")
library("ggplot2")
library("DALEX")
library("ranger")
library("modelStudio")
library(tidyverse)
library(tidymodels)
library(archivist)
library(stringr)
library(e1071)
# Import Training Data (2015, 2016, 2017, 2018)
happiness_tr <- happiness_train
happiness_tr <-add_rownames(happiness_tr, var = "rowname")
head(happiness_tr)
happiness_tr %>% filter(str_detect(rowname, 'United States'))
happieness_tr_data <- happiness_tr[,!names(happiness_tr) %in% "rowname"]
# Import Testing Data (2019)
happiness_te <- happiness_test
happiness_te <- add_rownames(happiness_te, var = "rowname")
happiness_te_usa <- happiness_te %>% filter(str_detect(rowname, "United States"))
happiness_te %>% top_n(5, score)
happieness_te_data <- happiness_te[,!names(happiness_te) %in% "rowname"]
# Plot Score vs GDP
ggplot(happieness_tr_data, aes(y=score, x=gdp_per_capita)) +
geom_point() +
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")
# Fit a Random Forest and Generalized Linear Model
model_ranger <- ranger(score ~., data = happieness_tr_data)
model_glm <- glm(score ~ ., data = happieness_tr_data)
model_svm <- svm(score ~ ., data = happieness_tr_data)
# Create an explainer for the models
explainer_ranger <- DALEX::explain(model_ranger,
data = happieness_te_data,
y = happieness_te_data$score,
label = "Random Forest")
explainer_glm <- DALEX::explain(model_glm,
data = happieness_te_data,
y = happieness_te_data$score,
label = "General Linear Model")
explainer_svm <- DALEX::explain(model_svm,
data = happieness_te_data,
y = happieness_te_data$score,
label = "Support Vector Machine")
vip_glm <- variable_importance(explainer = explainer_glm,
loss_function = loss_root_mean_square)
vip_ranger <- variable_importance(explainer = explainer_ranger,
loss_function = loss_root_mean_square)
vip_svm <- variable_importance(explainer = explainer_svm,
loss_function = loss_root_mean_square)
plot(vip_glm, vip_ranger, vip_svm, max_vars = 10)
# Make a studio for the model
modelStudio(explainer_svm, N=500, B=15)
bd_usa <- predict_parts(explainer = explainer_svm,
new_observation = happiness_te_usa,
type = "break_down_interactions")
library("ggplot2")
library("DALEX")
library("ggplot2")
library("DALEX")
library("ranger")
library("modelStudio")
library(tidyverse)
library(tidymodels)
library(archivist)
library(stringr)
library(e1071)
?ranger
library(ggplot2)
library(DALEX)
library(modelStudio)
library(ranger)    # Random Forest
library(e1071)       # SVM
# Import Training Data (2015, 2016, 2017, 2018)
happiness_tr <- happiness_train
happiness_tr <-add_rownames(happiness_tr, var = "rowname")
head(happiness_tr)
happiness_tr %>% filter(str_detect(rowname, 'United States'))
happieness_tr_data <- happiness_tr[,!names(happiness_tr) %in% "rowname"]
# Import Testing Data (2019)
happiness_te <- happiness_test
happiness_te <- add_rownames(happiness_te, var = "rowname")
happiness_te_usa <- happiness_te %>% filter(str_detect(rowname, "United States"))
happiness_te %>% top_n(5, score)
happieness_te_data <- happiness_te[,!names(happiness_te) %in% "rowname"]
# Plot Score vs GDP
ggplot(happieness_tr_data, aes(y=score, x=gdp_per_capita)) +
geom_point() +
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")
# Fit a Random Forest and Generalized Linear Model
model_ranger <- ranger(score ~., data = happieness_tr_data)
model_glm <- glm(score ~ ., data = happieness_tr_data)
model_svm <- svm(score ~ ., data = happieness_tr_data)
# Create an explainer for the models
explainer_ranger <- DALEX::explain(model_ranger,
data = happieness_te_data,
y = happieness_te_data$score,
label = "Random Forest")
explainer_glm <- DALEX::explain(model_glm,
data = happieness_te_data,
y = happieness_te_data$score,
label = "General Linear Model")
explainer_svm <- DALEX::explain(model_svm,
data = happieness_te_data,
y = happieness_te_data$score,
label = "Support Vector Machine")
vip_glm <- variable_importance(explainer = explainer_glm,
loss_function = loss_root_mean_square)
vip_ranger <- variable_importance(explainer = explainer_ranger,
loss_function = loss_root_mean_square)
vip_svm <- variable_importance(explainer = explainer_svm,
loss_function = loss_root_mean_square)
plot(vip_glm, vip_ranger, vip_svm, max_vars = 10)
# Make a studio for the model
modelStudio(explainer_svm, N=500, B=15)
bd_usa <- predict_parts(explainer = explainer_svm,
new_observation = happiness_te_usa,
type = "break_down_interactions")
bd_usa
plot(bd_usa)
?predict_parts
?plot
plot(bd_usa,
main = "USA SVM Break Down")
bd_usa <- predict_parts(explainer = explainer_svm,
new_observation = happiness_te_usa,
type = "break_down_interactions",
main = "X")
bd_usa
plot(bd_usa,
main = "USA SVM Break Down")
bd_usa <- predict_parts(explainer = explainer_svm,
new_observation = happiness_te_usa,
type = "break_down_interactions",
title = "USA SVM Break Down")
bd_usa
plot(bd_usa)
plot(bd_usa,
title = "USA SVM Break Down")
happiness_tr %>% filter(str_detect(rowname, 'Mex'))
happiness_tr %>% filter(str_detect(rowname, 'Mexico'))
happiness_tr %>% filter(str_detect(rowname, 'United States'))
happiness_tr %>% filter(str_detect(rowname, 'Mexico'))
# Import Training Data (2015, 2016, 2017, 2018)
happiness_tr <- happiness_train
happiness_tr <-add_rownames(happiness_tr, var = "rowname")
head(happiness_tr)
happiness_tr %>% filter(str_detect(rowname, 'United States'))
happiness_tr %>% filter(str_detect(rowname, 'Mexico'))
# Import Testing Data (2019)
happiness_te <- happiness_test
happiness_te <- add_rownames(happiness_te, var = "rowname")
happiness_te_usa <- happiness_te %>% filter(str_detect(rowname, "United States"))
happiness_te %>% top_n(5, score)
happieness_te_data <- happiness_te[,!names(happiness_te) %in% "rowname"]
# Plot Score vs GDP
ggplot(happieness_tr_data, aes(y=score, x=gdp_per_capita)) +
geom_point() +
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")
# Fit a Random Forest and Generalized Linear Model
model_ranger <- ranger(score ~., data = happieness_tr_data)
model_glm <- glm(score ~ ., data = happieness_tr_data)
model_svm <- svm(score ~ ., data = happieness_tr_data)
# Create an explainer for the models
explainer_ranger <- DALEX::explain(model_ranger,
data = happieness_te_data,
y = happieness_te_data$score,
label = "Random Forest")
explainer_glm <- DALEX::explain(model_glm,
data = happieness_te_data,
y = happieness_te_data$score,
label = "General Linear Model")
explainer_svm <- DALEX::explain(model_svm,
data = happieness_te_data,
y = happieness_te_data$score,
label = "Support Vector Machine")
vip_glm <- variable_importance(explainer = explainer_glm,
loss_function = loss_root_mean_square)
vip_ranger <- variable_importance(explainer = explainer_ranger,
loss_function = loss_root_mean_square)
vip_svm <- variable_importance(explainer = explainer_svm,
loss_function = loss_root_mean_square)
plot(vip_glm, vip_ranger, vip_svm, max_vars = 10)
# Make a studio for the model
modelStudio(explainer_svm, N=500, B=15)
happiness_te %>% top_n(5, score)
# Import Testing Data (2019)
happiness_te <- happiness_test
happiness_te <- add_rownames(happiness_te, var = "rowname")
happiness_te_usa <- happiness_te %>% filter(str_detect(rowname, "United States"))
happiness_te %>% top_n(5, score)
?top_5
?top_n
happiness_te %>% top_n(-5, score)
